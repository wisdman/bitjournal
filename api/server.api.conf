
location @forbidden {
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
  add_header 'Access-Control-Allow-Methods' 'DELETE, GET, HEAD, OPTIONS, POST, PUT' always;
  add_header 'Access-Control-Allow-Origin' '*' always;
  return 403 "Forbidden";
}

error_page 403 @forbidden;

location ~* ^/(auth|currencies|exchanges|files|ico|markets|publications|sections|statuses|users|video) {
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    add_header 'Access-Control-Allow-Methods' 'DELETE, GET, HEAD, OPTIONS, POST, PUT' always;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Content-Type' 'text/plain charset=UTF-8' always;
    add_header 'Content-Length' 0 always;
    return 204;
  }

  if ($http_Authorization = "") {
    return 403;
  }

  if ($request_method !~ ^(DELETE|GET|HEAD|POST|PUT)$) {
    return 403;
  }

  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
  add_header 'Access-Control-Allow-Methods' 'DELETE, GET, HEAD, OPTIONS, POST, PUT' always;
  add_header 'Access-Control-Allow-Origin' '*' always;

  expires -1;
  proxy_pass http://api;
  proxy_intercept_errors on;
}

location / {
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    add_header 'Access-Control-Allow-Methods' 'DELETE, GET, HEAD, OPTIONS, POST, PUT' always;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Content-Type' 'text/plain charset=UTF-8' always;
    add_header 'Content-Length' 0 always;
    return 204;
  }

  return 403;
}
